rfile = dir("*_real.csv").name
ffile = dir("*_freq.csv").name
ifile = dir("*_imag.csv").name

realp = dlmread(rfile,',',0,1);
imp = dlmread(ifile,',',0,1);
freq = dlmread(ffile,',',0,1);
time = dlmread(rfile,',');
time = time(:,1)
time_vec = [];
sweeps = [];
sweeps = [sweeps size(realp,1)];
Q = []
fr = []
bw = []
pshift = []

%Sweep iterator parameter
 for b = 1:size(realp,1)
    time_vec = [time_vec time(:,1)];
    %Extract Sweep
    real1 = realp(b,:);
    imp1 = imp(b,:);
    frequency = freq(1,:).'; %X-axis
    Z = real1+i.*imp1;
    Y = 1./Z.';
    [Yr,x,Bhat] = analyze(frequency,Y);
    pshift = [pshift x(1)];
    Q = [Q x(2)];
    fr = [fr x(3)];
    bw = [bw x(3)/x(2)];
 end



%plot(real(Yr),imag(Yr));

function [Yr,x,Bhat] = analyze(frequency,Y)
    Yor = vertcat(Y(1:50), Y(end-49:end));
    fOr = vertcat(frequency(1:50),frequency(end-49:end));
    Hor = vertcat([ones(50,1) frequency(1:50)],[ones(50,1) frequency(end-49:end)]);
    Bhat = (Hor.'*Hor)^-1*Hor.'*Yor;
    Bhat = [Bhat;0];
    H = [ones(length(frequency),1) frequency frequency.*2];
    Yhatb = H*Bhat;  
    Yr = Y-Yhatb;
    YrNyq = [real(Yr),imag(Yr)];
    [centerx,centery,R] = circfit(real(Yr),imag(Yr));
    Yr = Yr-(centerx+1i*centery);
    ang = angle(Yr-(centerx+i*centery));
    for a =2:length(ang)
            if ang(a)-ang(a-1)>1
                ang(a) = ang(a)-2*pi;
            end
    end
    fun = @(x,f) x(1)-2*atan(2*x(2)*(f./x(3)-1));
    x0 = [pi/2, 1000, 28500];
    [x,~] = createFit(frequency,ang);
    x = coeffvalues(x);
%     Hr = [1 x(3) x(3)^2];
%     orm = ((2*R)*exp(1i*x(1)))./(1+1i*x(2).*(fOr./x(3)-x(3)./fOr));
%     Yorr = Yor-orm;
%     Yrb = (centerx+i*centery)-R*exp(1i*x(1))+Hr*Bhat;
%     Hor = [Hor fOr.^2];
%     Hor = [Hor; Hr];
%     Bhat = (Hor.'*Hor)^-1*Hor.'*[Yorr;Yrb];
end


function   [xc,yc,R] = circfit(x,y)
%
%   [xc yx R] = circfit(x,y)
%
%   fits a circle  in x,y plane in a more accurate
%   (less prone to ill condition )
%  procedure than circfit2 but using more memory
%  x,y are column vector where (x(i),y(i)) is a measured point
%
%  result is center point (yc,xc) and radius R
%  an optional output is the vector of coeficient a
% describing the circle's equation
%
%   x^2+y^2+a(1)*x+a(2)*y+a(3)=0
%
%  By:  Izhak bucher 25/oct /1991, 
    x=x(:); y=y(:);
   a=[x y ones(size(x))]\[-(x.^2+y.^2)];
   xc = -.5*a(1);
   yc = -.5*a(2);
   R  =  sqrt((a(1)^2+a(2)^2)/4-a(3));
end

function [fitresult, gof] = createFit(frequency, ang)
%CREATEFIT(FREQUENCY,ANG)
%  Create a fit.
%
%  Data for 'untitled fit 1' fit:
%      X Input : frequency
%      Y Output: ang
%  Output:
%      fitresult : a fit object representing the fit.
%      gof : structure with goodness-of fit info.
%
%  See also FIT, CFIT, SFIT.

%  Auto-generated by MATLAB on 23-Mar-2020 12:25:09


[xData, yData] = prepareCurveData( frequency, ang );

% Set up fittype and options.
ft = fittype( 'a-2*atan(b*(x/c-c/x))', 'independent', 'x', 'dependent', 'y' );
opts = fitoptions( 'Method', 'NonlinearLeastSquares' );
opts.DiffMaxChange = 0.001;
opts.Display = 'Off';
opts.Lower = [-6.28 0 27000];
opts.MaxFunEvals = 6000;
opts.MaxIter = 4000;
opts.StartPoint = [0 100 28000];
opts.TolFun = 1e-07;
opts.TolX = 1e-07;
opts.Upper = [6.28 Inf 33000];

% Fit model to data.
[fitresult, gof] = fit( xData, yData, ft, opts );

% Plot fit with data.
figure( 'Name', 'untitled fit 1' );
h = plot( fitresult, xData, yData );
legend( h, 'ang vs. frequency', 'untitled fit 1', 'Location', 'NorthEast', 'Interpreter', 'none' );
% Label axes
xlabel( 'frequency', 'Interpreter', 'none' );
ylabel( 'ang', 'Interpreter', 'none' );
grid on
end
